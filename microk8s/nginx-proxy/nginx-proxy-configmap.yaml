apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    events {}
    http {
      include       mime.types;
      default_type  application/octet-stream;

      server {
        listen 80;
        server_name cinemonkey.com;
        return 301 https://$host$request_uri;
      }

      server {
        listen 443 ssl;
        server_name cinemonkey.com;

        # Τα αρχεία από το TLS secret
        ssl_certificate     /etc/nginx/certs/tls.crt;
        ssl_certificate_key /etc/nginx/certs/tls.key;

        # Για uploads (π.χ. μέσω MinIO ή backend)
        client_max_body_size 100m;

        location /keycloak/ {
          proxy_pass http://keycloak:8080/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Prefix /keycloak;
        }

        # (προαιρετικά – με /keycloak/ συνήθως αρκεί)
        location /admin/ {
          proxy_pass http://keycloak:8080/admin/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Prefix /keycloak;
        }

        location /resources/ {
          proxy_pass http://keycloak:8080/resources/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Prefix /keycloak;
        }

        location /api/ {
          proxy_pass http://cinemonkey-backend:8080/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_http_version 1.1;
          proxy_set_header Connection "";
          proxy_read_timeout 300s;
        }

        location / {
          proxy_pass http://cinemonkey-frontend:80;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /media/ {
          # public bucket posters στο MinIO
          proxy_pass http://minio:9000/posters/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }

        location /minio/ {
          # MinIO Console
          proxy_pass http://minio:9001/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

          sub_filter_types text/html;
          sub_filter 'href="/' 'href="/minio/';
          sub_filter 'src="/'  'src="/minio/';
          sub_filter_once off;

          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_read_timeout 600s;
        }

        location /mail-dev-cinemonkey/ {
          rewrite ^/mail-dev-cinemonkey/(.*)$ /$1 break;
          proxy_pass http://mail-dev-cinemonkey:1080/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
        }
      }
    }
